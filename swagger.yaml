swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Petstore"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"


host: "root"
basePath: "/"
tags:
- name: "turma"
  description: "Everything about your Pets"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /turma:
    get:
      tags:
      - "turma"
      summary: "Get all"
      description: "Get all turmas"
      operationId: "getTurmas"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "OK"
  /turma/{turmaid}:
    get:
      tags:
      - "turma"
      summary: "Get turma by id"
      description: "Get turma by id"
      operationId: "getTurma"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "turmaid"
        in: "path"
        description: "ID of turma to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "OK"
          
  /turma/delete/{turmaid}:
    delete:
      tags:
      - "turma"
      summary: "Delete turma by id"
      description: "Delete turma by id"
      operationId: "deleteTurma"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "turmaid"
        in: "path"
        description: "ID of turma deleted to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "204":
          description: "OK"
  /turma/update/{turmaid}:
    put:
      tags:
      - "turma"
      summary: "Update turma by id"
      description: "Update turma by id"
      operationId: "updateTurma"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "turmaid"
        in: "path"
        description: "ID of turma to update"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not found"
  /turma/create/:
    post:
      tags:
      - "turma"
      summary: "Create turma"
      description: "Create turma"
      operationId: "createTurma"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "201":
          description: "OK"
        "302":
          description: "Already exists"
          
  /turma/patch/{turmaid}:
    patch:
      tags:
      - "turma"
      summary: " Partially update turma by id"
      description: "Partially update turma by id"
      operationId: "Partially updateTurma"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "turmaid"
        in: "path"
        description: "ID of turma to partially update"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "OK"
        "404":
          description: "Not found"
